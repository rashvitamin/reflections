When would you want to use a remote repository rather than keeping all your work local?


Lect 10 :

Q. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

My manually pulling changes we have control over the changes happening in the local repository. Had it been automatic- it would be like dropbox and we are working on one things and something else which might have been linked will be changed automatically creating a messy situation.



Lect 14:

Q. Describe the differences between forks, clones, and branches. When would you use one instead of another?

Branch is branching out from a commit for a specific reason - like a feature, or experimenting a new version or seperating the production and the development version.

Cloning is replicating the repository. It can be done on both  - local to local or github to local

Forking can only be done on the GitHub. We we fork a repository a copy of it is created in our accounts repository section. Git also maintain the fork number to keep a track of number of times a repository is forked and for other analytics


Lect 22 :

Q. What is the benefit of having a copy of the last known state of the remote stored locally?

If we know the last known state of the remote stored locally, we can push the changes accordingly. Also, in the collabration mode, we could make out - if our master repo is ahead, behind or in sync with the remote master.


Lect 25:

Q. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

If I would have been collaborating without using Git or GitHub - then I would be using Dropbox or a Networked Folder. Also, we would be forced to share only the complete piece of code and would have to make efforts to maintain our individual locals which will introduce non standard practice.

If I would have been working individually, then I would be copying and renaming project folder to archive the previous version. Though it works but it is not eligent and managable as git and git hub.

It is much more easier to have version control using git and git hub; then using the other means - irrespective to whether you are working individually or in team.

